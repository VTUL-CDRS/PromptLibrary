Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"a85ccec1-3010-4e4e-9b57-87e742df97d1\" name=\"Changes\" comment=\"Stub for homeview search\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Backend/dist/routes/prompt.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Backend/dist/routes/prompt.js\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/Views/AdminDatabaseView.vue\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/Views/AdminDatabaseView.vue\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/Views/DatabaseView.vue\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/Views/DatabaseView.vue\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/Views/HomeView.vue\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/Views/HomeView.vue\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/Views/PromptSubmissionView.vue\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/Views/PromptSubmissionView.vue\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"package.json\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"654e0e46-1f15-4b48-bef1-59e146a7372e\" />\r\n        <option name=\"url\" value=\"https://github.com/narwhalle/PromptLibrary.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2dmHicGWjHdgpKldX2A5F7k8uh1\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;frontend-grind-flex&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/IdeaProjects/PromptLibrary/Frontend/src/Views&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;ts.external.directory.path&quot;: &quot;D:\\\\IntelliJ IDEA 2023.3.2\\\\plugins\\\\javascript-impl\\\\jsLanguageServicesImpl\\\\external&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\IdeaProjects\\PromptLibrary\\Frontend\\src\\Views\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Code\\PromptLibrary\\node_modules\\vite\\dist\\node\\chunks\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"PromptLibrary\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"PromptLibrary\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"a85ccec1-3010-4e4e-9b57-87e742df97d1\" name=\"Changes\" comment=\"\" />\r\n      <created>1710606462554</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1710606462554</updated>\r\n      <workItem from=\"1710606463745\" duration=\"36000\" />\r\n      <workItem from=\"1710606503998\" duration=\"1095000\" />\r\n      <workItem from=\"1710607659935\" duration=\"619000\" />\r\n      <workItem from=\"1710608342366\" duration=\"857000\" />\r\n      <workItem from=\"1710631106682\" duration=\"597000\" />\r\n      <workItem from=\"1711296778120\" duration=\"7254000\" />\r\n      <workItem from=\"1711304199386\" duration=\"1582000\" />\r\n      <workItem from=\"1711323886617\" duration=\"1087000\" />\r\n      <workItem from=\"1711469233921\" duration=\"3565000\" />\r\n      <workItem from=\"1711766954390\" duration=\"5000\" />\r\n      <workItem from=\"1711929576882\" duration=\"2303000\" />\r\n      <workItem from=\"1712022510020\" duration=\"4382000\" />\r\n      <workItem from=\"1712237603166\" duration=\"48000\" />\r\n      <workItem from=\"1712237656251\" duration=\"13000\" />\r\n      <workItem from=\"1712237674356\" duration=\"4220000\" />\r\n      <workItem from=\"1712695109538\" duration=\"1309000\" />\r\n      <workItem from=\"1712696430552\" duration=\"149000\" />\r\n      <workItem from=\"1712696638893\" duration=\"5346000\" />\r\n      <workItem from=\"1712970678768\" duration=\"2260000\" />\r\n      <workItem from=\"1713182608339\" duration=\"735000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"clear up files and get node working again\">\r\n      <created>1710608479458</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710608479458</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Changed git ignore\">\r\n      <created>1710608578432</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710608578432</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Header update, toggle broken, TODO styling.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711472735971</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711472735971</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Fixed footer\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711931037959</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711931037959</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Fixed another footer, removed gmail button from admin login, redid databaseview. TODO: CSS for all&#10;&#10;For database view: Move filter box to top left corner, make another container for prompt cards and put them in a vertical box.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711933788496</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711933788496</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Add global gitignore\">\r\n      <created>1712067147721</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712067147721</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Merge, fixed footer.\">\r\n      <created>1712071904315</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712071904315</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Prompt card content, fixed databaseview clipping. Added export button TODO: Export functionality\">\r\n      <created>1712512975859</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712512975859</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Export framework. TODO: figure out how to make the file itself download, figure out how to pass selected prompts\">\r\n      <created>1712513644686</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712513644686</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Pushing to catch up\">\r\n      <created>1712669419205</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712669419205</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"DB on PC, finish connection with backend for DB view (broken)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712696298165</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712696298165</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Fixing intellij with git\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712696448247</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712696448247</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Added fields to submit view, implemented (borked) submit connection to backend\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712701617390</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712701617390</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Send 200 after searches, more fixes for database and admin datbase\">\r\n      <created>1712776076075</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712776076075</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Styling done. TODO: Remove underline from routing, search from home view.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713152824363</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713152824363</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Fixed footer for real this time, wrapper for detail view, admin login alerts.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713154178130</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713154178130</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"17\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"frontend-grind-flex\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"clear up files and get node working again\" />\r\n    <MESSAGE value=\"Changed git ignore\" />\r\n    <MESSAGE value=\"Header update, toggle broken, TODO styling.\" />\r\n    <MESSAGE value=\"Fixed footer\" />\r\n    <MESSAGE value=\"Fixed another footer, removed gmail button from admin login, redid databaseview. TODO: CSS for all&#10;&#10;For database view: Move filter box to top left corner, make another container for prompt cards and put them in a vertical box.\" />\r\n    <MESSAGE value=\"Moved dropdown buttons to make sense, installed vueuse and vueuse/component to make dropdown disappear on click outside box.\" />\r\n    <MESSAGE value=\"Add global gitignore\" />\r\n    <MESSAGE value=\"Merge, fixed footer.\" />\r\n    <MESSAGE value=\"Prompt card content, fixed databaseview clipping. Added export button TODO: Export functionality\" />\r\n    <MESSAGE value=\"Export framework. TODO: figure out how to make the file itself download, figure out how to pass selected prompts\" />\r\n    <MESSAGE value=\"Pushing to catch up\" />\r\n    <MESSAGE value=\"DB on PC, finish connection with backend for DB view (broken)\" />\r\n    <MESSAGE value=\"Fixing intellij with git\" />\r\n    <MESSAGE value=\"Added fields to submit view, implemented (borked) submit connection to backend\" />\r\n    <MESSAGE value=\"Send 200 after searches, more fixes for database and admin datbase\" />\r\n    <MESSAGE value=\"Styling done. TODO: Remove underline from routing, search from home view.\" />\r\n    <MESSAGE value=\"Fixed footer for real this time, wrapper for detail view, admin login alerts.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fixed footer for real this time, wrapper for detail view, admin login alerts.\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 503d3a95e23054c74a3607ec02dd85b33fd362a9)
+++ b/.idea/workspace.xml	(date 1713626304733)
@@ -5,12 +5,36 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="a85ccec1-3010-4e4e-9b57-87e742df97d1" name="Changes" comment="Stub for homeview search">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Backend/dist/routes/prompt.js" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/dist/routes/prompt.js" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Frontend/src/Views/AdminDatabaseView.vue" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/Views/AdminDatabaseView.vue" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Frontend/src/Views/DatabaseView.vue" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/Views/DatabaseView.vue" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Frontend/src/Views/HomeView.vue" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/Views/HomeView.vue" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Frontend/src/Views/PromptSubmissionView.vue" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/Views/PromptSubmissionView.vue" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/accountSeed.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/accountSeed.js.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/controllers/prompts.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/controllers/prompts.js.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/hasTagSeed.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/hasTagSeed.js.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/lib/prisma.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/lib/prisma.js.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/llmSeed.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/llmSeed.js.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/prisma/seed.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/prisma/seed.js.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/promptSeed.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/promptSeed.js.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/routes/account.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/routes/account.js.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/routes/export.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/routes/export.js.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/routes/llm.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/routes/llm.js.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/routes/prompt.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/routes/prompt.js.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/routes/search.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/routes/search.js.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/routes/tag.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/routes/tag.js.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/server.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/server.js.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/tagSeed.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Backend/dist/tagSeed.js.map" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -59,25 +83,25 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;frontend-grind-flex&quot;,
-    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;D:/IdeaProjects/PromptLibrary/Frontend/src/Views&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;ts.external.directory.path&quot;: &quot;D:\\IntelliJ IDEA 2023.3.2\\plugins\\javascript-impl\\jsLanguageServicesImpl\\external&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "git-widget-placeholder": "frontend-grind-flex",
+    "ignore.virus.scanning.warn.message": "true",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "D:/IdeaProjects/PromptLibrary/Frontend/src/Views",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "ts.external.directory.path": "C:\\Program Files\\JetBrains\\IntelliJ IDEA 2023.1.2\\plugins\\javascript-impl\\jsLanguageServicesImpl\\external",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="D:\IdeaProjects\PromptLibrary\Frontend\src\Views" />
@@ -267,7 +291,7 @@
                   <entry key="branch">
                     <value>
                       <list>
-                        <option value="frontend-grind-flex" />
+                        <option value="main" />
                       </list>
                     </value>
                   </entry>
Index: Backend/dist/controllers/prompts.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/controllers/prompts.js.map b/Backend/dist/controllers/prompts.js.map
new file mode 100644
--- /dev/null	(date 1713626304734)
+++ b/Backend/dist/controllers/prompts.js.map	(date 1713626304734)
@@ -0,0 +1,1 @@
+{"version":3,"file":"prompts.js","sourceRoot":"","sources":["../../controllers/prompts.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wCAAuC;AAGhC,IAAM,aAAa,GAAG,UAAO,GAAY,EAAE,GAAa;;;;;oBAC3C,qBAAM,eAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;oBACzC,KAAK,EAAE;wBACH,MAAM,EAAE;4BACJ,MAAM,EAAE,MAAA,GAAG,CAAC,KAAK,CAAC,CAAC,0CAAE,QAAQ,EAAE;yBAClC;wBACD,QAAQ,EAAE;4BACN,MAAM,EAAE,MAAA,GAAG,CAAC,KAAK,CAAC,CAAC,0CAAE,QAAQ,EAAE;yBAClC;wBACD,OAAO,EAAE;4BACL,MAAM,EAAE,MAAA,GAAG,CAAC,KAAK,CAAC,CAAC,0CAAE,QAAQ,EAAE;yBAClC;wBACD,OAAO,EAAE;4BACL,MAAM,EAAE,MAAA,GAAG,CAAC,KAAK,CAAC,CAAC,0CAAE,QAAQ,EAAE;yBAClC;qBACJ;oBACD,OAAO,EAAE;wBACL,MAAM,EAAE;4BACN,OAAO,EAAE;gCACP,GAAG,EAAE,IAAI;6BACV;yBACF;qBACJ;iBACJ,CAAC,EAAA;;gBAtBI,OAAO,GAAG,SAsBd;gBACF,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;;;;KACpB,CAAA;AAzBY,QAAA,aAAa,iBAyBzB;AAEM,IAAM,iBAAiB,GAAG,UAAO,GAAY,EAAE,GAAa;;;;;;;gBAEnD,IAAI,GAAK,GAAG,CAAC,KAAK,KAAd,CAAe;qBACvB,CAAA,OAAO,IAAI,KAAK,QAAQ,CAAA,EAAxB,wBAAwB;gBAClB,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjB,qBAAM,eAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;wBACzC,KAAK,EAAE;4BACH,MAAM,EAAE;gCACJ,MAAM,EAAE,MAAA,GAAG,CAAC,KAAK,CAAC,CAAC,0CAAE,QAAQ,EAAE;6BAClC;4BACD,QAAQ,EAAE;gCACN,MAAM,EAAE,MAAA,GAAG,CAAC,KAAK,CAAC,CAAC,0CAAE,QAAQ,EAAE;6BAClC;4BACD,OAAO,EAAE;gCACL,MAAM,EAAE,MAAA,GAAG,CAAC,KAAK,CAAC,CAAC,0CAAE,QAAQ,EAAE;6BAClC;4BACD,OAAO,EAAE;gCACL,MAAM,EAAE,MAAA,GAAG,CAAC,KAAK,CAAC,CAAC,0CAAE,QAAQ,EAAE;6BAClC;4BAED,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,UAAC,EAAE,IAAK,OAAA,CAAC;gCACvB,MAAM,EAAE;oCACN,IAAI,EAAE;wCACJ,KAAK,EAAE;4CACL,MAAM,EAAE,EAAE;yCACX;qCACF;iCACF;6BACJ,CAAC,EARwB,CAQxB,CAAC;yBACN;wBACD,OAAO,EAAE;4BACL,MAAM,EAAE;gCACN,OAAO,EAAE;oCACP,GAAG,EAAE,IAAI;iCACV;6BACF;yBACJ;qBACJ,CAAC,EAAA;;gBAhCI,OAAO,GAAG,SAgCd;gBACF,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;;oBAGjB,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAA;;;;gBAGtE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;;;;;KAElE,CAAA;AA9CY,QAAA,iBAAiB,qBA8C7B"}
\ No newline at end of file
Index: Backend/dist/controllers/prompts.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/controllers/prompts.js b/Backend/dist/controllers/prompts.js
new file mode 100644
--- /dev/null	(date 1713626304734)
+++ b/Backend/dist/controllers/prompts.js	(date 1713626304734)
@@ -0,0 +1,129 @@
+"use strict";
+var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
+    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
+    return new (P || (P = Promise))(function (resolve, reject) {
+        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
+        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
+        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
+        step((generator = generator.apply(thisArg, _arguments || [])).next());
+    });
+};
+var __generator = (this && this.__generator) || function (thisArg, body) {
+    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
+    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
+    function verb(n) { return function (v) { return step([n, v]); }; }
+    function step(op) {
+        if (f) throw new TypeError("Generator is already executing.");
+        while (g && (g = 0, op[0] && (_ = 0)), _) try {
+            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
+            if (y = 0, t) op = [op[0] & 2, t.value];
+            switch (op[0]) {
+                case 0: case 1: t = op; break;
+                case 4: _.label++; return { value: op[1], done: false };
+                case 5: _.label++; y = op[1]; op = [0]; continue;
+                case 7: op = _.ops.pop(); _.trys.pop(); continue;
+                default:
+                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
+                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
+                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
+                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
+                    if (t[2]) _.ops.pop();
+                    _.trys.pop(); continue;
+            }
+            op = body.call(thisArg, _);
+        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
+        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
+    }
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.searchPromptsTags = exports.searchPrompts = void 0;
+var prisma_1 = require("../lib/prisma");
+var searchPrompts = function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var prompts;
+    var _a, _b, _c, _d;
+    return __generator(this, function (_e) {
+        switch (_e.label) {
+            case 0: return [4 /*yield*/, prisma_1.prisma.prompt.findMany({
+                    where: {
+                        prompt: {
+                            search: (_a = req.query.q) === null || _a === void 0 ? void 0 : _a.toString()
+                        },
+                        response: {
+                            search: (_b = req.query.q) === null || _b === void 0 ? void 0 : _b.toString()
+                        },
+                        llmName: {
+                            search: (_c = req.query.q) === null || _c === void 0 ? void 0 : _c.toString()
+                        },
+                        summary: {
+                            search: (_d = req.query.q) === null || _d === void 0 ? void 0 : _d.toString()
+                        }
+                    },
+                    include: {
+                        hasTag: {
+                            include: {
+                                tag: true
+                            }
+                        }
+                    }
+                })];
+            case 1:
+                prompts = _e.sent();
+                res.json(prompts);
+                return [2 /*return*/];
+        }
+    });
+}); };
+exports.searchPrompts = searchPrompts;
+var searchPromptsTags = function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var tags, tagArray, prompts, error_1;
+    var _a, _b, _c, _d;
+    return __generator(this, function (_e) {
+        switch (_e.label) {
+            case 0:
+                _e.trys.push([0, 4, , 5]);
+                tags = req.query.tags;
+                if (!(typeof tags === 'string')) return [3 /*break*/, 2];
+                tagArray = tags.split(' ');
+                return [4 /*yield*/, prisma_1.prisma.prompt.findMany({
+                        where: {
+                            prompt: {
+                                search: (_a = req.query.q) === null || _a === void 0 ? void 0 : _a.toString()
+                            },
+                            response: {
+                                search: (_b = req.query.q) === null || _b === void 0 ? void 0 : _b.toString()
+                            },
+                            llmName: {
+                                search: (_c = req.query.q) === null || _c === void 0 ? void 0 : _c.toString()
+                            },
+                            summary: {
+                                search: (_d = req.query.q) === null || _d === void 0 ? void 0 : _d.toString()
+                            },
+                            AND: tagArray.map(function (id) { return ({
+                                hasTag: {
+                                    some: {
+                                        tagId: {
+                                            equals: id
+                                        }
+                                    }
+                                }
+                            }); })
+                        },
+                        include: {
+                            hasTag: {
+                                include: {
+                                    tag: true
+                                }
+                            }
+                        }
+                    })];
+            case 1:
+                prompts = _e.sent();
+                res.json(prompts);
+                return [3 /*break*/, 3];
+            case 2: throw new Error('Tags must be provided as a comma-separated list');
+            case 3: return [3 /*break*/, 5];
+            case 4:
+                error_1 = _e.sent();
+                res.status(500).json({ error: 'Failed to fetch prompts' });
+                return [3 /*break*/, 5];
+            case 5: re
\ No newline at end of file
Index: Backend/dist/routes/tag.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/routes/tag.js.map b/Backend/dist/routes/tag.js.map
new file mode 100644
--- /dev/null	(date 1713626304740)
+++ b/Backend/dist/routes/tag.js.map	(date 1713626304740)
@@ -0,0 +1,1 @@
+{"version":3,"file":"tag.js","sourceRoot":"","sources":["../../routes/tag.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wCAAuC;AACvC,oDAAmD;AAEnD,2BAA2B;AAC3B,IAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAA;AAE/B;;GAEG;AACH,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAO,GAAY,EAAE,GAAa;;;;;;gBAEjC,qBAAM,eAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAA;;gBAAlC,IAAI,GAAG,SAA2B;gBACxC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;;gBAEf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;;;;;KAE3D,CAAC,CAAC;AAEH;;;;GAIG;AACH,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAO,GAAY,EAAE,GAAa;;;;;;gBAGhC,qBAAM,eAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAC,CAAC,EAAA;;gBAAlD,MAAM,GAAG,SAAyC;gBACxD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;;;gBAEjB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,qBAAqB,EAAE,CAAC,CAAC;;;;;KAE1D,CAAC,CAAC;AAEH;;GAEG;AACH,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,UAAO,GAAY,EAAE,GAAa;;;;;;gBAG3C,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAA;gBAGf,qBAAM,eAAM,CAAC,GAAG,CAAC,UAAU,CAAC;wBACtC,KAAK,EAAE,EAAC,IAAI,EAAE,KAAK,EAAC;qBACrB,CAAC,EAAA;;gBAFI,GAAG,GAAG,SAEV;gBAEF,0BAA0B;gBAC1B,IAAI,GAAG,EAAE,CAAC;oBACR,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAChB,CAAC;qBAAM,CAAC;oBACN,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,CAAC;gBACnD,CAAC;;;;gBAED,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;;;;;KAE3D,CAAC,CAAC;AAGH;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA4BK;AAEL,eAAe;AACf,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC"}
\ No newline at end of file
Index: Backend/dist/routes/tag.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/routes/tag.js b/Backend/dist/routes/tag.js
new file mode 100644
--- /dev/null	(date 1713626304740)
+++ b/Backend/dist/routes/tag.js	(date 1713626304740)
@@ -0,0 +1,148 @@
+"use strict";
+var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
+    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
+    return new (P || (P = Promise))(function (resolve, reject) {
+        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
+        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
+        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
+        step((generator = generator.apply(thisArg, _arguments || [])).next());
+    });
+};
+var __generator = (this && this.__generator) || function (thisArg, body) {
+    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
+    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
+    function verb(n) { return function (v) { return step([n, v]); }; }
+    function step(op) {
+        if (f) throw new TypeError("Generator is already executing.");
+        while (g && (g = 0, op[0] && (_ = 0)), _) try {
+            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
+            if (y = 0, t) op = [op[0] & 2, t.value];
+            switch (op[0]) {
+                case 0: case 1: t = op; break;
+                case 4: _.label++; return { value: op[1], done: false };
+                case 5: _.label++; y = op[1]; op = [0]; continue;
+                case 7: op = _.ops.pop(); _.trys.pop(); continue;
+                default:
+                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
+                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
+                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
+                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
+                    if (t[2]) _.ops.pop();
+                    _.trys.pop(); continue;
+            }
+            op = body.call(thisArg, _);
+        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
+        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
+    }
+};
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+var prisma_1 = require("../lib/prisma");
+var express_1 = __importDefault(require("express"));
+// Create the router object
+var router = express_1.default.Router();
+/**
+ * Get function. Not id specific
+ */
+router.get('/', function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var tags, error_1;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                return [4 /*yield*/, prisma_1.prisma.tag.findMany()];
+            case 1:
+                tags = _a.sent();
+                res.json(tags);
+                return [3 /*break*/, 3];
+            case 2:
+                error_1 = _a.sent();
+                res.status(500).json({ error: 'Failed to fetch tags' });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+ * Post function. Just pushes a tag name
+ *
+ * The tag specics are: just the string name.
+ */
+router.post('/', function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var newTag, error_2;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                return [4 /*yield*/, prisma_1.prisma.tag.create({ data: req.body })];
+            case 1:
+                newTag = _a.sent();
+                res.json(newTag);
+                return [3 /*break*/, 3];
+            case 2:
+                error_2 = _a.sent();
+                res.status(500).json({ error: 'Failed to post tags' });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+ * Get function. Id specific
+ */
+router.get('/:id', function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var tagId, tag, error_3;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                tagId = req.params.id;
+                return [4 /*yield*/, prisma_1.prisma.tag.findUnique({
+                        where: { name: tagId }
+                    })];
+            case 1:
+                tag = _a.sent();
+                // Check if the tag exists
+                if (tag) {
+                    res.json(tag);
+                }
+                else {
+                    res.status(404).json({ error: 'Tag not found' });
+                }
+                return [3 /*break*/, 3];
+            case 2:
+                error_3 = _a.sent();
+                res.status(500).json({ error: 'Failed to fetch tags' });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+router.delete('/:id', async (req: Request, res: Response) => {
+  try {
+    // Grab the id from the params
+    const tagId = req.params.id
+
+    // Retrieve the prompt from the database and check existance
+    const prompt = await prisma.tag.findUnique({
+      where: { name: tagId },
+    });
+    if (!prompt) {
+      return res.status(404).json({ error: "Tag not found" });
+    }
+
+    // Delete the has tag first since it foreign keys the tag
+    await prisma.hasTag.deleteMany({
+      where: { tagId: tagId }
+    });
+
+    //Normal stuff
+    const tag = await prisma.tag.delete({
+      where: {name: tagId}
+    });
+
+    res.json(tag)
+  } catch (error
\ No newline at end of file
Index: Backend/dist/routes/search.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/routes/search.js.map b/Backend/dist/routes/search.js.map
new file mode 100644
--- /dev/null	(date 1713626304740)
+++ b/Backend/dist/routes/search.js.map	(date 1713626304740)
@@ -0,0 +1,1 @@
+{"version":3,"file":"search.js","sourceRoot":"","sources":["../../routes/search.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wCAAuC;AACvC,kDAA0E;AAC1E,oDAAqD;AAErD,2BAA2B;AAC3B,IAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC;;;GAGG;AACH,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,UAAO,GAAY,EAAE,GAAa;;;;;;gBAEjD,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;qBACxB,CAAA,OAAO,IAAI,KAAK,QAAQ,CAAA,EAAxB,wBAAwB;gBACpB,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjB,qBAAM,eAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;wBAC3C,KAAK,EAAE;4BACL,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,UAAC,EAAE,IAAK,OAAA,CAAC;gCACzB,MAAM,EAAE;oCACN,IAAI,EAAE;wCACJ,KAAK,EAAE;4CACL,MAAM,EAAE,EAAE;yCACX;qCACF;iCACF;6BACF,CAAC,EARwB,CAQxB,CAAC;yBACJ;wBACD,OAAO,EAAE;4BACP,MAAM,EAAE;gCACN,OAAO,EAAE;oCACP,GAAG,EAAE,IAAI;iCACV;6BACF;yBACF;qBACF,CAAC,EAAA;;gBAnBI,OAAO,GAAG,SAmBd;gBACF,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClB,sBAAO;oBAEP,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;;;;gBAGpE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;;;;;KAE9D,CAAC,CAAC;AAEH;;;;GAIG;AACH,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAO,GAAY,EAAE,GAAa;;;;;;gBAExC,qBAAM,IAAA,uBAAa,EAAC,GAAG,EAAE,GAAG,CAAC,EAAA;;gBAAvC,OAAO,GAAG,SAA6B;gBAC7C,oBAAoB;gBACpB,sBAAO;;;gBAEP,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;;;;;KAE9D,CAAC,CAAC;AAEH;;;;;;GAMG;AACH,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAO,GAAY,EAAE,GAAa;;;;;;gBAExC,qBAAM,IAAA,2BAAiB,EAAC,GAAG,EAAE,GAAG,CAAC,EAAA;;gBAA3C,OAAO,GAAG,SAAiC;gBACjD,kBAAkB;gBAClB,oBAAoB;gBACpB,sBAAO;;;gBAEP,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;;;;;KAE9D,CAAC,CAAC;AAEH,eAAe;AACf,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC"}
\ No newline at end of file
Index: Backend/dist/routes/search.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/routes/search.js b/Backend/dist/routes/search.js
new file mode 100644
--- /dev/null	(date 1713626304740)
+++ b/Backend/dist/routes/search.js	(date 1713626304740)
@@ -0,0 +1,141 @@
+"use strict";
+var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
+    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
+    return new (P || (P = Promise))(function (resolve, reject) {
+        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
+        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
+        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
+        step((generator = generator.apply(thisArg, _arguments || [])).next());
+    });
+};
+var __generator = (this && this.__generator) || function (thisArg, body) {
+    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
+    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
+    function verb(n) { return function (v) { return step([n, v]); }; }
+    function step(op) {
+        if (f) throw new TypeError("Generator is already executing.");
+        while (g && (g = 0, op[0] && (_ = 0)), _) try {
+            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
+            if (y = 0, t) op = [op[0] & 2, t.value];
+            switch (op[0]) {
+                case 0: case 1: t = op; break;
+                case 4: _.label++; return { value: op[1], done: false };
+                case 5: _.label++; y = op[1]; op = [0]; continue;
+                case 7: op = _.ops.pop(); _.trys.pop(); continue;
+                default:
+                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
+                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
+                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
+                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
+                    if (t[2]) _.ops.pop();
+                    _.trys.pop(); continue;
+            }
+            op = body.call(thisArg, _);
+        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
+        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
+    }
+};
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+var prisma_1 = require("../lib/prisma");
+var prompts_1 = require("../controllers/prompts");
+var express_1 = __importDefault(require("express"));
+// Create the router object
+var router = express_1.default.Router();
+/**
+ * Tag search. Filter by however many tags are inputted.
+ * /prompt/tagsearch?tags=Cooking
+ */
+router.get("/tagSearch", function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var tags, tagArray, prompts, error_1;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 4, , 5]);
+                tags = req.query.tags;
+                if (!(typeof tags === "string")) return [3 /*break*/, 2];
+                tagArray = tags.split(" ");
+                return [4 /*yield*/, prisma_1.prisma.prompt.findMany({
+                        where: {
+                            AND: tagArray.map(function (id) { return ({
+                                hasTag: {
+                                    some: {
+                                        tagId: {
+                                            equals: id
+                                        }
+                                    }
+                                }
+                            }); })
+                        },
+                        include: {
+                            hasTag: {
+                                include: {
+                                    tag: true
+                                }
+                            }
+                        }
+                    })];
+            case 1:
+                prompts = _a.sent();
+                res.json(prompts);
+                return [2 /*return*/];
+            case 2: throw new Error("Tags must be provided as a plus separated list");
+            case 3: return [3 /*break*/, 5];
+            case 4:
+                error_1 = _a.sent();
+                res.status(500).json({ error: "Failed to fetch prompts" });
+                return [3 /*break*/, 5];
+            case 5: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+ * Get request. Executes searchPrompts controller function.
+ * Prisma implemented Full Text Search
+ * Takes query from /search?q=
+ */
+router.get("/textsearch", function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var prompts, error_2;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                return [4 /*yield*/, (0, prompts_1.searchPrompts)(req, res)];
+            case 1:
+                prompts = _a.sent();
+                //res.json(prompts);
+                return [2 /*return*/];
+            case 2:
+                error_2 = _a.sent();
+                res.status(500).json({ error: "Failed to fetch prompts" });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+ * Tag Searching AND Full Text Search
+ * Exact same req body requirements as tag searching.
+ *  Must be an array of strings. Each tag is split by '+'
+ *
+ * http://localhost:8000/search/fullsearch?q=Steak&tags=Cooking
+ */
+router.get("/fullsearch", function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var prompts, error_3;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                return [4 /*yield*/, (0, prompts_1.searchPromptsTags)(req, res)];
+            case 1:
+                prompts = _a.sent();
+                //res.status(200);
+                //res.json(prompts);
+                return [2 /*return*/];
+            case 2:
+                error_3 = _a.sent();
+                res.status(500).json({ error: "Failed to fetch prompts" });
+                return [3 /*break*/, 3];
+    
\ No newline at end of file
Index: Backend/dist/routes/prompt.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/routes/prompt.js.map b/Backend/dist/routes/prompt.js.map
new file mode 100644
--- /dev/null	(date 1713626304740)
+++ b/Backend/dist/routes/prompt.js.map	(date 1713626304740)
@@ -0,0 +1,1 @@
+{"version":3,"file":"prompt.js","sourceRoot":"","sources":["../../routes/prompt.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
Index: Backend/dist/routes/prompt.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/routes/prompt.js b/Backend/dist/routes/prompt.js
new file mode 100644
--- /dev/null	(date 1713626304740)
+++ b/Backend/dist/routes/prompt.js	(date 1713626304740)
@@ -0,0 +1,290 @@
+"use strict";
+var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
+    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
+    return new (P || (P = Promise))(function (resolve, reject) {
+        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
+        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
+        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
+        step((generator = generator.apply(thisArg, _arguments || [])).next());
+    });
+};
+var __generator = (this && this.__generator) || function (thisArg, body) {
+    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
+    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
+    function verb(n) { return function (v) { return step([n, v]); }; }
+    function step(op) {
+        if (f) throw new TypeError("Generator is already executing.");
+        while (g && (g = 0, op[0] && (_ = 0)), _) try {
+            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
+            if (y = 0, t) op = [op[0] & 2, t.value];
+            switch (op[0]) {
+                case 0: case 1: t = op; break;
+                case 4: _.label++; return { value: op[1], done: false };
+                case 5: _.label++; y = op[1]; op = [0]; continue;
+                case 7: op = _.ops.pop(); _.trys.pop(); continue;
+                default:
+                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
+                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
+                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
+                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
+                    if (t[2]) _.ops.pop();
+                    _.trys.pop(); continue;
+            }
+            op = body.call(thisArg, _);
+        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
+        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
+    }
+};
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+var prisma_1 = require("../lib/prisma");
+var express_1 = __importDefault(require("express"));
+// Create the router object
+var router = express_1.default.Router();
+/**
+ * General Get Request. Returns all prompts including unapproved prompts.
+ */
+router.get("/all", function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var prompts, error_1;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                return [4 /*yield*/, prisma_1.prisma.prompt.findMany({
+                        include: {
+                            hasTag: {
+                                include: {
+                                    tag: true
+                                }
+                            }
+                        }
+                    })];
+            case 1:
+                prompts = _a.sent();
+                res.json(prompts);
+                return [3 /*break*/, 3];
+            case 2:
+                error_1 = _a.sent();
+                res.status(500).json({ error: "Failed to fetch prompts" });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+ * Get all unapproved prompts
+ */
+router.get("/unapproved", function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var prompts, error_2;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                return [4 /*yield*/, prisma_1.prisma.prompt.findMany({
+                        where: {
+                            approved: false
+                        }
+                    })];
+            case 1:
+                prompts = _a.sent();
+                res.json(prompts);
+                return [3 /*break*/, 3];
+            case 2:
+                error_2 = _a.sent();
+                res.status(500).json({ error: "Failed to fetch prompts" });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+ * General Get Request. Returns all prompts excluding unapproved prompts.
+ */
+router.get("/", function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var prompts, error_3;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                return [4 /*yield*/, prisma_1.prisma.prompt.findMany({
+                        where: {
+                            approved: true
+                        },
+                        include: {
+                            hasTag: {
+                                include: {
+                                    tag: true
+                                }
+                            }
+                        }
+                    })];
+            case 1:
+                prompts = _a.sent();
+                res.json(prompts);
+                return [3 /*break*/, 3];
+            case 2:
+                error_3 = _a.sent();
+                res.status(500).json({ error: "Failed to fetch prompts" });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+ * Post request. Requires a req body.
+ */
+router.post("/", function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var _a, prompt, response, image, rating, approved, llmName, summary, title, tags, createdPrompt, error_4;
+    return __generator(this, function (_b) {
+        switch (_b.label) {
+            case 0:
+                _b.trys.push([0, 2, , 3]);
+                _a = req.body, prompt = _a.prompt, response = _a.response, image = _a.image, rating = _a.rating, approved = _a.approved, llmName = _a.llmName, summary = _a.summary, title = _a.title, tags = _a.tags;
+                return [4 /*yield*/, prisma_1.prisma.prompt.create({
+                        data: {
+                            prompt: prompt,
+                            response: response,
+                            image: image,
+                            rating: rating,
+                            approved: approved,
+                            llmName: llmName,
+                            summary: summary,
+                            title: title,
+                            hasTag: {
+                                create: tags.map(function (tag) { return ({
+                                    tag: {
+                                        connectOrCreate: {
+                                            where: {
+                                                name: tag.tagName
+                                            },
+                                            create: {
+                                                name: tag.tagName
+                                            }
+                                        }
+                                    }
+                                }); })
+                            },
+                        }
+                    })];
+            case 1:
+                createdPrompt = _b.sent();
+                res.status(200);
+                res.json(createdPrompt);
+                return [3 /*break*/, 3];
+            case 2:
+                error_4 = _b.sent();
+                console.error("Prisma error:", error_4);
+                res.status(500).json({ error: "Failed to fetch prompts" });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+ * Update Request. Is ID specific
+ */
+router.patch("/:id", function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var promptId, prompts, error_5;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                promptId = req.params.id;
+                return [4 /*yield*/, prisma_1.prisma.prompt.update({
+                        where: {
+                            id: parseInt(promptId),
+                        },
+                        data: req.body
+                    })];
+            case 1:
+                prompts = _a.sent();
+                // Check if the Prompt exists
+                if (prompts) {
+                    res.json(prompts);
+                }
+                else {
+                    res.status(404).json({ error: "Prompt not found" });
+                }
+                return [3 /*break*/, 3];
+            case 2:
+                error_5 = _a.sent();
+                res.status(500).json({ error: "Failed to fetch prompts" });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+ * Get function. Id specific
+ */
+router.get("/:id", function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var tagId, tag, error_6;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                tagId = req.params.id;
+                return [4 /*yield*/, prisma_1.prisma.prompt.findUnique({
+                        where: { id: parseInt(tagId) },
+                        include: {
+                            hasTag: {
+                                include: {
+                                    tag: true
+                                }
+                            }
+                        }
+                    })];
+            case 1:
+                tag = _a.sent();
+                // Check if the tag exists
+                if (tag) {
+                    res.json(tag);
+                }
+                else {
+                    res.status(404).json({ error: "Tag not found" });
+                }
+                return [3 /*break*/, 3];
+            case 2:
+                error_6 = _a.sent();
+                res.status(500).json({ error: "Failed to fetch prompts" });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+ * Delete function. Id specific
+ */
+router.delete("/:id", function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var promptId, prompt, deleteRes, error_7;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 4, , 5]);
+                promptId = parseInt(req.params.id);
+                return [4 /*yield*/, prisma_1.prisma.prompt.findUnique({
+                        where: { id: promptId },
+                    })];
+            case 1:
+                prompt = _a.sent();
+                if (!prompt) {
+                    return [2 /*return*/, res.status(404).json({ error: "Prompt not found" })];
+                }
+                // Delete the has tag first since it foreign keys the prompt id
+                return [4 /*yield*/, prisma_1.prisma.hasTag.deleteMany({
+                        where: { promptId: promptId }
+                    })];
+            case 2:
+                // Delete the has tag first since it foreign keys the prompt id
+                _a.sent();
+                return [4 /*yield*/, prisma_1.prisma.prompt.delete({
+                        where: { id: promptId },
+                    })];
+            case 3:
+                deleteRes = _a.sent();
+                res.json(deleteRes);
+                return [3 /*break*/, 5];
+            case 4:
+         
\ No newline at end of file
Index: Backend/dist/routes/llm.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/routes/llm.js.map b/Backend/dist/routes/llm.js.map
new file mode 100644
--- /dev/null	(date 1713626304739)
+++ b/Backend/dist/routes/llm.js.map	(date 1713626304739)
@@ -0,0 +1,1 @@
+{"version":3,"file":"llm.js","sourceRoot":"","sources":["../../routes/llm.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wCAAuC;AACvC,oDAAmD;AAEnD,2BAA2B;AAC3B,IAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAA;AAE/B;;GAEG;AACH,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAO,GAAY,EAAE,GAAa;;;;;;gBAEjC,qBAAM,eAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAA;;gBAAlC,IAAI,GAAG,SAA2B;gBACxC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;;gBAEf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;;;;;KAE3D,CAAC,CAAC;AAEH;;GAEG;AACH,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,UAAO,GAAY,EAAE,GAAa;;;;;;gBAG3C,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAA;gBAEZ,qBAAM,eAAM,CAAC,GAAG,CAAC,UAAU,CAAC;wBACtC,KAAK,EAAE,EAAC,OAAO,EAAE,EAAE,EAAC;qBACrB,CAAC,EAAA;;gBAFI,GAAG,GAAG,SAEV;gBAEF,IAAI,GAAG,EAAE,CAAC;oBACR,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAChB,CAAC;qBAAM,CAAC;oBACN,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,CAAC;gBACnD,CAAC;;;;gBAED,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;;;;;KAE3D,CAAC,CAAC;AAEH;;;;GAIG;AACH,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAO,GAAY,EAAE,GAAa;;;;;;gBAGhC,qBAAM,eAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAC,CAAC,EAAA;;gBAAlD,MAAM,GAAG,SAAyC;gBACxD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;;;gBAEjB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,qBAAqB,EAAE,CAAC,CAAC;;;;;KAE1D,CAAC,CAAC;AAEH;;GAEG;AACH,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAO,GAAY,EAAE,GAAa;;;;;;gBAG9C,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAA;gBAGf,qBAAM,eAAM,CAAC,GAAG,CAAC,MAAM,CAAC;wBAClC,KAAK,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC;qBACxB,CAAC,EAAA;;gBAFI,GAAG,GAAG,SAEV;gBAEF,0BAA0B;gBAC1B,IAAI,GAAG,EAAE,CAAC;oBACR,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAChB,CAAC;qBAAM,CAAC;oBACN,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,CAAC;gBACnD,CAAC;;;;gBAED,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;;;;;KAE3D,CAAC,CAAC;AAEH,eAAe;AACf,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC"}
\ No newline at end of file
Index: Backend/dist/routes/llm.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/routes/llm.js b/Backend/dist/routes/llm.js
new file mode 100644
--- /dev/null	(date 1713626304739)
+++ b/Backend/dist/routes/llm.js	(date 1713626304739)
@@ -0,0 +1,148 @@
+"use strict";
+var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
+    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
+    return new (P || (P = Promise))(function (resolve, reject) {
+        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
+        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
+        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
+        step((generator = generator.apply(thisArg, _arguments || [])).next());
+    });
+};
+var __generator = (this && this.__generator) || function (thisArg, body) {
+    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
+    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
+    function verb(n) { return function (v) { return step([n, v]); }; }
+    function step(op) {
+        if (f) throw new TypeError("Generator is already executing.");
+        while (g && (g = 0, op[0] && (_ = 0)), _) try {
+            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
+            if (y = 0, t) op = [op[0] & 2, t.value];
+            switch (op[0]) {
+                case 0: case 1: t = op; break;
+                case 4: _.label++; return { value: op[1], done: false };
+                case 5: _.label++; y = op[1]; op = [0]; continue;
+                case 7: op = _.ops.pop(); _.trys.pop(); continue;
+                default:
+                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
+                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
+                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
+                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
+                    if (t[2]) _.ops.pop();
+                    _.trys.pop(); continue;
+            }
+            op = body.call(thisArg, _);
+        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
+        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
+    }
+};
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+var prisma_1 = require("../lib/prisma");
+var express_1 = __importDefault(require("express"));
+// Create the router object
+var router = express_1.default.Router();
+/**
+ * Get function. Not id specific
+ */
+router.get('/', function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var tags, error_1;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                return [4 /*yield*/, prisma_1.prisma.lLM.findMany()];
+            case 1:
+                tags = _a.sent();
+                res.json(tags);
+                return [3 /*break*/, 3];
+            case 2:
+                error_1 = _a.sent();
+                res.status(500).json({ error: 'Failed to fetch llms' });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+ * Get function. Id specific
+ */
+router.get('/:id', function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var id, llm, error_2;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                id = req.params.id;
+                return [4 /*yield*/, prisma_1.prisma.lLM.findUnique({
+                        where: { llmName: id }
+                    })];
+            case 1:
+                llm = _a.sent();
+                if (llm) {
+                    res.json(llm);
+                }
+                else {
+                    res.status(404).json({ error: 'Tag not found' });
+                }
+                return [3 /*break*/, 3];
+            case 2:
+                error_2 = _a.sent();
+                res.status(500).json({ error: 'Failed to fetch llms' });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+ * Post function. Just pushes a tag name
+ *
+ * The tag specics are: just the string name.
+ */
+router.post('/', function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var newTag, error_3;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                return [4 /*yield*/, prisma_1.prisma.lLM.create({ data: req.body })];
+            case 1:
+                newTag = _a.sent();
+                res.json(newTag);
+                return [3 /*break*/, 3];
+            case 2:
+                error_3 = _a.sent();
+                res.status(500).json({ error: 'Failed to post llms' });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+ * Delete function. Id specific
+ */
+router.delete('/:id', function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var tagId, tag, error_4;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                tagId = req.params.id;
+                return [4 /*yield*/, prisma_1.prisma.lLM.delete({
+                        where: { llmName: tagId }
+                    })];
+            case 1:
+                tag = _a.sent();
+                // Check if the tag exists
+                if (tag) {
+                    res.json(tag);
+                }
+                else {
+                    res.status(404).json({ error: 'Tag not found' });
+                }
+                return [3 /*break*/, 3];
+            case 2:
+                error_4 = _a.sent();
+                res.status(500).json({ error: 'Failed to fetch tags' });
+                return [3 /*break*/
\ No newline at end of file
Index: Backend/dist/routes/export.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/routes/export.js.map b/Backend/dist/routes/export.js.map
new file mode 100644
--- /dev/null	(date 1713626304739)
+++ b/Backend/dist/routes/export.js.map	(date 1713626304739)
@@ -0,0 +1,1 @@
+{"version":3,"file":"export.js","sourceRoot":"","sources":["../../routes/export.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wCAAuC;AACvC,oDAAqD;AAErD,2BAA2B;AAC3B,IAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC;;;;;;;;;;GAUG;AACH,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAO,GAAY,EAAE,GAAa;;;;;;gBAEzC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC;gBACjB,GAAG,GAAU,KAAK,CAAC,GAAG,CAAC;gBAEb,qBAAM,eAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;wBAC3C,KAAK,EAAE;4BACL,EAAE,EAAE;gCACF,EAAE,EAAE,GAAG;6BACR;yBACF;wBACD,MAAM,EAAE;4BACN,MAAM,EAAE,IAAI;4BACZ,QAAQ,EAAE,IAAI;4BACd,MAAM,EAAE,IAAI;yBACb;qBACF,CAAC,EAAA;;gBAXI,OAAO,GAAG,SAWd;gBAEF,gBAAgB;gBAChB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;;;gBAElB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;;;;;KAE9D,CAAC,CAAC;AAEH;;GAEG;AACH,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,UAAO,GAAY,EAAE,GAAa;;;;;;gBAGjC,qBAAM,eAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;wBAC3C,MAAM,EAAE;4BACN,MAAM,EAAE,IAAI;4BACZ,QAAQ,EAAE,IAAI;4BACd,MAAM,EAAE,IAAI;yBACb;qBACF,CAAC,EAAA;;gBANI,OAAO,GAAG,SAMd;gBAEF,gBAAgB;gBAChB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;;;gBAElB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;;;;;KAE9D,CAAC,CAAC;AAEH,eAAe;AACf,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC"}
\ No newline at end of file
Index: Backend/dist/routes/export.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/routes/export.js b/Backend/dist/routes/export.js
new file mode 100644
--- /dev/null	(date 1713626304739)
+++ b/Backend/dist/routes/export.js	(date 1713626304739)
@@ -0,0 +1,115 @@
+"use strict";
+var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
+    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
+    return new (P || (P = Promise))(function (resolve, reject) {
+        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
+        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
+        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
+        step((generator = generator.apply(thisArg, _arguments || [])).next());
+    });
+};
+var __generator = (this && this.__generator) || function (thisArg, body) {
+    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
+    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
+    function verb(n) { return function (v) { return step([n, v]); }; }
+    function step(op) {
+        if (f) throw new TypeError("Generator is already executing.");
+        while (g && (g = 0, op[0] && (_ = 0)), _) try {
+            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
+            if (y = 0, t) op = [op[0] & 2, t.value];
+            switch (op[0]) {
+                case 0: case 1: t = op; break;
+                case 4: _.label++; return { value: op[1], done: false };
+                case 5: _.label++; y = op[1]; op = [0]; continue;
+                case 7: op = _.ops.pop(); _.trys.pop(); continue;
+                default:
+                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
+                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
+                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
+                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
+                    if (t[2]) _.ops.pop();
+                    _.trys.pop(); continue;
+            }
+            op = body.call(thisArg, _);
+        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
+        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
+    }
+};
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+var prisma_1 = require("../lib/prisma");
+var express_1 = __importDefault(require("express"));
+// Create the router object
+var router = express_1.default.Router();
+/**
+ * Function to export a list of prompt ids.
+ *
+ * To use, just use the endpoint but include a body in the request:
+ *
+ * {
+ *  ids: [...]
+ * }
+ *
+ * Where ids has a list of integers of ids to output
+ */
+router.post("/", function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var stuff, ids, prompts, error_1;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                stuff = req.body;
+                ids = stuff.ids;
+                return [4 /*yield*/, prisma_1.prisma.prompt.findMany({
+                        where: {
+                            id: {
+                                in: ids,
+                            },
+                        },
+                        select: {
+                            prompt: true,
+                            response: true,
+                            hasTag: true,
+                        },
+                    })];
+            case 1:
+                prompts = _a.sent();
+                // Return a JSON
+                res.json(prompts);
+                return [3 /*break*/, 3];
+            case 2:
+                error_1 = _a.sent();
+                res.status(500).json({ error: "Failed to fetch prompts" });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+/**
+ * Export all prompts
+ */
+router.get("/all", function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var prompts, error_2;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                return [4 /*yield*/, prisma_1.prisma.prompt.findMany({
+                        select: {
+                            prompt: true,
+                            response: true,
+                            hasTag: true,
+                        },
+                    })];
+            case 1:
+                prompts = _a.sent();
+                // Return a JSON
+                res.json(prompts);
+                return [3 /*break*/, 3];
+            case 2:
+                error_2 = _a.sent();
+                res.status(500).json({ error: "Failed to fetch prompts" });
+                return [3 /*break*/, 3];
+            case 3: return [2 
\ No newline at end of file
Index: Backend/dist/routes/account.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/routes/account.js.map b/Backend/dist/routes/account.js.map
new file mode 100644
--- /dev/null	(date 1713626304738)
+++ b/Backend/dist/routes/account.js.map	(date 1713626304738)
@@ -0,0 +1,1 @@
+{"version":3,"file":"account.js","sourceRoot":"","sources":["../../routes/account.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wCAAuC;AACvC,oDAAmD;AAEnD,2BAA2B;AAC3B,IAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAA;AAE/B;;;GAGG;AACH,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAO,GAAY,EAAE,GAAa;;;;;;gBAE7B,qBAAM,eAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAA;;gBAA1C,QAAQ,GAAG,SAA+B;gBAChD,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;;gBAEnB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC,CAAC;;;;;KAE5D,CAAC,CAAC;AAEH,eAAe;AACf,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC"}
\ No newline at end of file
Index: Backend/dist/routes/account.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/routes/account.js b/Backend/dist/routes/account.js
new file mode 100644
--- /dev/null	(date 1713626304738)
+++ b/Backend/dist/routes/account.js	(date 1713626304738)
@@ -0,0 +1,69 @@
+"use strict";
+var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
+    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
+    return new (P || (P = Promise))(function (resolve, reject) {
+        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
+        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
+        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
+        step((generator = generator.apply(thisArg, _arguments || [])).next());
+    });
+};
+var __generator = (this && this.__generator) || function (thisArg, body) {
+    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
+    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
+    function verb(n) { return function (v) { return step([n, v]); }; }
+    function step(op) {
+        if (f) throw new TypeError("Generator is already executing.");
+        while (g && (g = 0, op[0] && (_ = 0)), _) try {
+            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
+            if (y = 0, t) op = [op[0] & 2, t.value];
+            switch (op[0]) {
+                case 0: case 1: t = op; break;
+                case 4: _.label++; return { value: op[1], done: false };
+                case 5: _.label++; y = op[1]; op = [0]; continue;
+                case 7: op = _.ops.pop(); _.trys.pop(); continue;
+                default:
+                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
+                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
+                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
+                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
+                    if (t[2]) _.ops.pop();
+                    _.trys.pop(); continue;
+            }
+            op = body.call(thisArg, _);
+        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
+        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
+    }
+};
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+var prisma_1 = require("../lib/prisma");
+var express_1 = __importDefault(require("express"));
+// Create the router object
+var router = express_1.default.Router();
+/**
+ * Get request for the accounts.
+ * Theoretically there is only 1 account stored for a moderator account.
+ */
+router.get('/', function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
+    var accounts, error_1;
+    return __generator(this, function (_a) {
+        switch (_a.label) {
+            case 0:
+                _a.trys.push([0, 2, , 3]);
+                return [4 /*yield*/, prisma_1.prisma.account.findMany()];
+            case 1:
+                accounts = _a.sent();
+                res.json(accounts);
+                return [3 /*break*/, 3];
+            case 2:
+                error_1 = _a.sent();
+                res.status(500).json({ error: 'Failed to fetch users' });
+                return [3 /*break*/, 3];
+            case 3: return [2 /*return*/];
+        }
+    });
+}); });
+// Expor
\ No newline at end of file
Index: Backend/dist/prisma/seed.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/prisma/seed.js.map b/Backend/dist/prisma/seed.js.map
new file mode 100644
--- /dev/null	(date 1713626304737)
+++ b/Backend/dist/prisma/seed.js.map	(date 1713626304737)
@@ -0,0 +1,1 @@
+{"version":3,"file":"seed.js","sourceRoot":"","sources":["../../prisma/seed.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8CAA0C;AAC1C,4CAAwC;AACxC,sCAAkC;AAClC,sCAAkC;AAClC,4CAAwC;AACxC,wCAAuC;AAEvC,SAAe,IAAI;;;;;;0BACW,EAAR,aAAA,sBAAQ;;;yBAAR,CAAA,sBAAQ,CAAA;oBAAnB,OAAO;oBACd,qBAAM,eAAM,CAAC,OAAO,CAAC,MAAM,CAAC;4BAC1B,IAAI,EAAE,OAAO;yBACd,CAAC,EAAA;;oBAFF,SAEE,CAAC;;;oBAHe,IAAQ,CAAA;;;0BAKR,EAAJ,SAAA,cAAI;;;yBAAJ,CAAA,kBAAI,CAAA;oBAAX,GAAG;oBACV,qBAAM,eAAM,CAAC,GAAG,CAAC,MAAM,CAAC;4BACtB,IAAI,EAAE,GAAG;yBACV,CAAC,EAAA;;oBAFF,SAEE,CAAC;;;oBAHW,IAAI,CAAA;;;0BAKA,EAAJ,SAAA,cAAI;;;yBAAJ,CAAA,kBAAI,CAAA;oBAAX,GAAG;oBACV,qBAAM,eAAM,CAAC,GAAG,CAAC,MAAM,CAAC;4BACtB,IAAI,EAAE,GAAG;yBACV,CAAC,EAAA;;oBAFF,SAEE,CAAC;;;oBAHW,IAAI,CAAA;;;0BAKM,EAAP,YAAA,oBAAO;;;yBAAP,CAAA,qBAAO,CAAA;oBAAjB,MAAM;oBACb,qBAAM,eAAM,CAAC,MAAM,CAAC,MAAM,CAAC;4BACzB,IAAI,EAAE,MAAM;yBACb,CAAC,EAAA;;oBAFF,SAEE,CAAC;;;oBAHc,IAAO,CAAA;;;0BAKA,EAAP,YAAA,oBAAO;;;yBAAP,CAAA,qBAAO,CAAA;oBAAjB,MAAM;oBACb,qBAAM,eAAM,CAAC,MAAM,CAAC,MAAM,CAAC;4BACzB,IAAI,EAAE,MAAM;yBACb,CAAC,EAAA;;oBAFF,SAEE,CAAC;;;oBAHc,IAAO,CAAA;;;;;;CAK3B;AAED,IAAI,EAAE;KACH,KAAK,CAAC,UAAC,CAAC;IACP,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACf,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC;KACD,OAAO,CAAC;IACP,eAAM,CAAC,WAAW,EAAE,CAAC;AACvB,CAAC,CAAC,CAAC"}
\ No newline at end of file
Index: Backend/dist/prisma/seed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/prisma/seed.js b/Backend/dist/prisma/seed.js
new file mode 100644
--- /dev/null	(date 1713626304737)
+++ b/Backend/dist/prisma/seed.js	(date 1713626304737)
@@ -0,0 +1,132 @@
+"use strict";
+var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
+    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
+    return new (P || (P = Promise))(function (resolve, reject) {
+        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
+        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
+        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
+        step((generator = generator.apply(thisArg, _arguments || [])).next());
+    });
+};
+var __generator = (this && this.__generator) || function (thisArg, body) {
+    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
+    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
+    function verb(n) { return function (v) { return step([n, v]); }; }
+    function step(op) {
+        if (f) throw new TypeError("Generator is already executing.");
+        while (g && (g = 0, op[0] && (_ = 0)), _) try {
+            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
+            if (y = 0, t) op = [op[0] & 2, t.value];
+            switch (op[0]) {
+                case 0: case 1: t = op; break;
+                case 4: _.label++; return { value: op[1], done: false };
+                case 5: _.label++; y = op[1]; op = [0]; continue;
+                case 7: op = _.ops.pop(); _.trys.pop(); continue;
+                default:
+                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
+                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
+                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
+                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
+                    if (t[2]) _.ops.pop();
+                    _.trys.pop(); continue;
+            }
+            op = body.call(thisArg, _);
+        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
+        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
+    }
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+var accountSeed_1 = require("../accountSeed");
+var hasTagSeed_1 = require("../hasTagSeed");
+var llmSeed_1 = require("../llmSeed");
+var tagSeed_1 = require("../tagSeed");
+var promptSeed_1 = require("../promptSeed");
+var prisma_1 = require("../lib/prisma");
+function main() {
+    return __awaiter(this, void 0, void 0, function () {
+        var _i, accounts_1, account, _a, llms_1, llm, _b, tags_1, tag, _c, prompts_1, prompt, _d, hasTags_1, hasTag;
+        return __generator(this, function (_e) {
+            switch (_e.label) {
+                case 0:
+                    _i = 0, accounts_1 = accountSeed_1.accounts;
+                    _e.label = 1;
+                case 1:
+                    if (!(_i < accounts_1.length)) return [3 /*break*/, 4];
+                    account = accounts_1[_i];
+                    return [4 /*yield*/, prisma_1.prisma.account.create({
+                            data: account,
+                        })];
+                case 2:
+                    _e.sent();
+                    _e.label = 3;
+                case 3:
+                    _i++;
+                    return [3 /*break*/, 1];
+                case 4:
+                    _a = 0, llms_1 = llmSeed_1.llms;
+                    _e.label = 5;
+                case 5:
+                    if (!(_a < llms_1.length)) return [3 /*break*/, 8];
+                    llm = llms_1[_a];
+                    return [4 /*yield*/, prisma_1.prisma.lLM.create({
+                            data: llm,
+                        })];
+                case 6:
+                    _e.sent();
+                    _e.label = 7;
+                case 7:
+                    _a++;
+                    return [3 /*break*/, 5];
+                case 8:
+                    _b = 0, tags_1 = tagSeed_1.tags;
+                    _e.label = 9;
+                case 9:
+                    if (!(_b < tags_1.length)) return [3 /*break*/, 12];
+                    tag = tags_1[_b];
+                    return [4 /*yield*/, prisma_1.prisma.tag.create({
+                            data: tag,
+                        })];
+                case 10:
+                    _e.sent();
+                    _e.label = 11;
+                case 11:
+                    _b++;
+                    return [3 /*break*/, 9];
+                case 12:
+                    _c = 0, prompts_1 = promptSeed_1.prompts;
+                    _e.label = 13;
+                case 13:
+                    if (!(_c < prompts_1.length)) return [3 /*break*/, 16];
+                    prompt = prompts_1[_c];
+                    return [4 /*yield*/, prisma_1.prisma.prompt.create({
+                            data: prompt,
+                        })];
+                case 14:
+                    _e.sent();
+                    _e.label = 15;
+                case 15:
+                    _c++;
+                    return [3 /*break*/, 13];
+                case 16:
+                    _d = 0, hasTags_1 = hasTagSeed_1.hasTags;
+                    _e.label = 17;
+                case 17:
+                    if (!(_d < hasTags_1.length)) return [3 /*break*/, 20];
+                    hasTag = hasTags_1[_d];
+                    return [4 /*yield*/, prisma_1.prisma.hasTag.create({
+                            data: hasTag,
+                        })];
+                case 18:
+                    _e.sent();
+                    _e.label = 19;
+                case 19:
+                    _d++;
+                    return [3 /*break*/, 17];
+                case 20: return [2 /*return*/];
+            }
+        });
+    });
+}
+main()
+    .catch(function (e) {
+    console
\ No newline at end of file
Index: Backend/dist/lib/prisma.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/lib/prisma.js.map b/Backend/dist/lib/prisma.js.map
new file mode 100644
--- /dev/null	(date 1713626304736)
+++ b/Backend/dist/lib/prisma.js.map	(date 1713626304736)
@@ -0,0 +1,1 @@
+{"version":3,"file":"prisma.js","sourceRoot":"","sources":["../../lib/prisma.ts"],"names":[],"mappings":";;;;AAAA,sCAAsC;AACtC,yCAA8C;AAE9C,IAAM,qBAAqB,GAAG;IAC5B,OAAO,IAAI,qBAAY,EAAE,CAAC;AAC5B,CAAC,CAAC;AAIF,IAAM,eAAe,GAAG,UAEvB,CAAC;AAEW,QAAA,MAAM,GAAG,MAAA,eAAe,CAAC,MAAM,mCAAI,qBAAqB,EAAE,CAAC;AAExE,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;IAAE,eAAe,CAAC,MAAM,GAAG,cAAM,CAAC"}
\ No newline at end of file
Index: Backend/dist/lib/prisma.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/lib/prisma.js b/Backend/dist/lib/prisma.js
new file mode 100644
--- /dev/null	(date 1713626304735)
+++ b/Backend/dist/lib/prisma.js	(date 1713626304735)
@@ -0,0 +1,14 @@
+"use strict";
+var _a;
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.prisma = void 0;
+/* Copy and pasted from prisma docs */
+var client_1 = require("@prisma/client");
+var prismaClientSingleton = function () {
+    return new client_1.PrismaClient();
+};
+var globalForPrisma = globalThis;
+exports.prisma = (_a = globalForPrisma.prisma) !== null && _a !== void 0 ? _a : prismaClientSingleton();
+if (process.env.NODE_ENV !== "production")
+    globalForPrisma.prisma = exports.prisma;
+//# sourceMappingURL=
\ No newline at end of file
Index: Backend/dist/tagSeed.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/tagSeed.js.map b/Backend/dist/tagSeed.js.map
new file mode 100644
--- /dev/null	(date 1713626304741)
+++ b/Backend/dist/tagSeed.js.map	(date 1713626304741)
@@ -0,0 +1,1 @@
+{"version":3,"file":"tagSeed.js","sourceRoot":"","sources":["../tagSeed.ts"],"names":[],"mappings":";;;AAAa,QAAA,IAAI,GAAG;IAChB,EAAC,IAAI,EAAE,YAAY,EAAC;IACpB,EAAC,IAAI,EAAE,SAAS,EAAC;IACjB,EAAC,IAAI,EAAE,SAAS,EAAC;IACjB,EAAC,IAAI,EAAE,KAAK,EAAC;IACb,EAAC,IAAI,EAAE,YAAY,EAAC;CACrB,CAAA"}
\ No newline at end of file
Index: Backend/dist/tagSeed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/tagSeed.js b/Backend/dist/tagSeed.js
new file mode 100644
--- /dev/null	(date 1713626304741)
+++ b/Backend/dist/tagSeed.js	(date 1713626304741)
@@ -0,0 +1,11 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.tags = void 0;
+exports.tags = [
+    { name: "technology" },
+    { name: "science" },
+    { name: "history" },
+    { name: "art" },
+    { name: "literature" }
+];
+//# sourceMappingURL=tagS
\ No newline at end of file
Index: Backend/dist/server.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/server.js.map b/Backend/dist/server.js.map
new file mode 100644
--- /dev/null	(date 1713626304741)
+++ b/Backend/dist/server.js.map	(date 1713626304741)
@@ -0,0 +1,1 @@
+{"version":3,"file":"server.js","sourceRoot":"","sources":["../server.ts"],"names":[],"mappings":";;;;;AAAA,oDAA8D;AAC9D,8CAAwB;AAExB,IAAM,IAAI,GAAG,IAAI,CAAC;AAElB,0BAA0B;AAC1B,IAAM,GAAG,GAAY,IAAA,iBAAO,GAAE,CAAC;AAE/B,2BAA2B;AAC3B,sDAAsD;AACtD,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAEhD,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,GAAE,CAAC,CAAC;AAEhB,SAAS;AACT,IAAM,QAAQ,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACzC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC1B,IAAM,YAAY,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACjD,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;AAClC,IAAM,WAAW,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC/C,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AAChC,IAAM,QAAQ,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACzC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC1B,IAAM,WAAW,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC/C,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AAChC,IAAM,WAAW,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC/C,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AAEhC,YAAY;AACZ,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,CAAU,EAAE,GAAa;IACrC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC;AAEH,8BAA8B;AAC9B,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;IACf,OAAO,CAAC,GAAG,CAAC,gCAAyB,IAAI,CAAE,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC"}
\ No newline at end of file
Index: Backend/dist/server.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/server.js b/Backend/dist/server.js
new file mode 100644
--- /dev/null	(date 1713626304741)
+++ b/Backend/dist/server.js	(date 1713626304741)
@@ -0,0 +1,36 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+var express_1 = __importDefault(require("express"));
+var cors_1 = __importDefault(require("cors"));
+var port = 8080;
+// Make the express object
+var app = (0, express_1.default)();
+// Allow json body requests
+// Adds middleware which parses the requests coming in
+app.use(express_1.default.json());
+app.use(express_1.default.urlencoded({ extended: true }));
+app.use((0, cors_1.default)());
+// Routes
+var tagRoute = require("./routes/tag");
+app.use('/tag', tagRoute);
+var accountRoute = require("./routes/account");
+app.use('/account', accountRoute);
+var promptRoute = require("./routes/prompt");
+app.use('/prompt', promptRoute);
+var llmRoute = require("./routes/llm");
+app.use('/llm', llmRoute);
+var searchRoute = require("./routes/search");
+app.use('/search', searchRoute);
+var exportRoute = require("./routes/export");
+app.use('/export', exportRoute);
+// Basic get
+app.get("/", function (_, res) {
+    res.send("HELLO");
+});
+// Start listening on the port
+app.listen(port, function () {
+    console.log("now listening on port ".concat(port));
+});
\ No newline at end of file
Index: Backend/dist/promptSeed.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/promptSeed.js.map b/Backend/dist/promptSeed.js.map
new file mode 100644
--- /dev/null	(date 1713626304738)
+++ b/Backend/dist/promptSeed.js.map	(date 1713626304738)
@@ -0,0 +1,1 @@
+{"version":3,"file":"promptSeed.js","sourceRoot":"","sources":["../promptSeed.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
Index: Backend/dist/promptSeed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/promptSeed.js b/Backend/dist/promptSeed.js
new file mode 100644
--- /dev/null	(date 1713626304738)
+++ b/Backend/dist/promptSeed.js	(date 1713626304738)
@@ -0,0 +1,16 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.prompts = void 0;
+exports.prompts = [
+    { prompt: "What is the capital of France?", response: "The capital of France is Paris.", image: "paris.jpg", rating: 4.5, approved: true, llmName: "Bard", createdAt: "2024-04-02T12:00:00Z", summary: "The Capital of France", title: "Capital of France" },
+    { prompt: "Explain the theory of relativity.", response: "The theory of relativity describes how objects in motion experience time and space differently.", image: "relativity.jpg", rating: 4.7, approved: true, llmName: "ChatGPT", createdAt: "2024-04-02T12:00:00Z", summary: "Theory of Relativity", title: "Theory of Relativity" },
+    { prompt: "Who painted the Mona Lisa?", response: "The Mona Lisa was painted by Leonardo da Vinci.", image: "mona_lisa.jpg", rating: 4.8, approved: true, llmName: "CoPilot", createdAt: "2024-04-02T12:00:00Z", summary: "Painter of the Mona Lisa", title: "Painter of the Mona Lisa" },
+    { prompt: "What is the significance of the Industrial Revolution?", response: "The Industrial Revolution marked a major turning point in history, leading to significant advancements in technology, industry, and society.", image: "industrial_revolution.jpg", rating: 4.9, approved: true, llmName: "Bard", createdAt: "2024-04-02T12:00:00Z", summary: "Significance of Industrial Revolution", title: "Significance of Industrial Revolution" },
+    { prompt: "Who wrote \"To Kill a Mockingbird\"?", response: "\"To Kill a Mockingbird\" was written by Harper Lee.", image: "to_kill_a_mockingbird.jpg", rating: 4.6, approved: true, llmName: "ChatGPT", createdAt: "2024-04-02T12:00:00Z", summary: "Author of To Kill a Mockingbird", title: "Author of To Kill a Mockingbird" },
+    { prompt: "Explain the process of photosynthesis.", response: "Photosynthesis is the process by which plants convert light energy into chemical energy to fuel their growth and development.", image: "photosynthesis.jpg", rating: 4.7, approved: true, llmName: "CoPilot", createdAt: "2024-04-02T12:00:00Z", summary: "Process of Photosynthesis", title: "Process of Photosynthesis" },
+    { prompt: "What are the key features of Baroque art?", response: "Baroque art is characterized by its dramatic use of light and shadow, grandeur, and emotional intensity.", image: "baroque.jpg", rating: 4.8, approved: true, llmName: "Bard", createdAt: "2024-04-02T12:00:00Z", summary: "Features of Baroque Art", title: "Features of Baroque Art" },
+    { prompt: "Who discovered penicillin?", response: "Penicillin was discovered by Alexander Fleming.", image: "penicillin.jpg", rating: 4.9, approved: true, llmName: "ChatGPT", createdAt: "2024-04-02T12:00:00Z", summary: "Discoverer of Penicillin", title: "Discoverer of Penicillin" },
+    { prompt: "What is the significance of the Magna Carta?", response: "The Magna Carta is considered one of the most important documents in history as it established the principle that everyone, including the king, is subject to the law.", image: "magna_carta.jpg", rating: 4.8, approved: true, llmName: "CoPilot", createdAt: "2024-04-02T12:00:00Z", summary: "Significance of Magna Carta", title: "Significance of Magna Carta" },
+    { prompt: "What are the main themes in \"1984\" by George Orwell?", response: "\"1984\" explores themes of totalitarianism, surveillance, censorship, and the loss of individuality.", image: "1984.jpg", rating: 4.7, approved: true, llmName: "Bard", createdAt: "2024-04-02T12:00:00Z", summary: "Themes in 1984", title: "Themes in 1984" }
+];
+//# sourceMappingURL=pr
\ No newline at end of file
Index: Backend/dist/llmSeed.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/llmSeed.js.map b/Backend/dist/llmSeed.js.map
new file mode 100644
--- /dev/null	(date 1713626304736)
+++ b/Backend/dist/llmSeed.js.map	(date 1713626304736)
@@ -0,0 +1,1 @@
+{"version":3,"file":"llmSeed.js","sourceRoot":"","sources":["../llmSeed.ts"],"names":[],"mappings":";;;AAAa,QAAA,IAAI,GAAG;IAChB,EAAC,OAAO,EAAE,SAAS,EAAC;IACpB,EAAC,OAAO,EAAE,MAAM,EAAC;IACjB,EAAC,OAAO,EAAE,SAAS,EAAC;CACrB,CAAA"}
\ No newline at end of file
Index: Backend/dist/llmSeed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/llmSeed.js b/Backend/dist/llmSeed.js
new file mode 100644
--- /dev/null	(date 1713626304736)
+++ b/Backend/dist/llmSeed.js	(date 1713626304736)
@@ -0,0 +1,9 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.llms = void 0;
+exports.llms = [
+    { llmName: "ChatGPT" },
+    { llmName: "Bard" },
+    { llmName: "CoPilot" }
+];
+//# sourceMappingURL=llmSee
\ No newline at end of file
Index: Backend/dist/hasTagSeed.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/hasTagSeed.js.map b/Backend/dist/hasTagSeed.js.map
new file mode 100644
--- /dev/null	(date 1713626304735)
+++ b/Backend/dist/hasTagSeed.js.map	(date 1713626304735)
@@ -0,0 +1,1 @@
+{"version":3,"file":"hasTagSeed.js","sourceRoot":"","sources":["../hasTagSeed.ts"],"names":[],"mappings":";;;AAAa,QAAA,OAAO,GAAG;IACrB,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE;IACjC,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE;IACjC,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE;IACjC,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE;IACpC,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE;IAC7B,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE;IACjC,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE;IACpC,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE;CACnC,CAAA"}
\ No newline at end of file
Index: Backend/dist/hasTagSeed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/hasTagSeed.js b/Backend/dist/hasTagSeed.js
new file mode 100644
--- /dev/null	(date 1713626304735)
+++ b/Backend/dist/hasTagSeed.js	(date 1713626304735)
@@ -0,0 +1,14 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.hasTags = void 0;
+exports.hasTags = [
+    { promptId: 1, tagId: "science" },
+    { promptId: 1, tagId: "history" },
+    { promptId: 2, tagId: "science" },
+    { promptId: 2, tagId: "literature" },
+    { promptId: 3, tagId: "art" },
+    { promptId: 4, tagId: "history" },
+    { promptId: 4, tagId: "technology" },
+    { promptId: 5, tagId: "literature" }
+];
+//# sourceMappingURL=hasT
\ No newline at end of file
Index: Backend/dist/accountSeed.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/accountSeed.js.map b/Backend/dist/accountSeed.js.map
new file mode 100644
--- /dev/null	(date 1713626304734)
+++ b/Backend/dist/accountSeed.js.map	(date 1713626304734)
@@ -0,0 +1,1 @@
+{"version":3,"file":"accountSeed.js","sourceRoot":"","sources":["../accountSeed.ts"],"names":[],"mappings":";;;AAAa,QAAA,QAAQ,GAAG;IACtB,EAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE;CACnE,CAAC"}
\ No newline at end of file
Index: Backend/dist/accountSeed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/dist/accountSeed.js b/Backend/dist/accountSeed.js
new file mode 100644
--- /dev/null	(date 1713626304733)
+++ b/Backend/dist/accountSeed.js	(date 1713626304733)
@@ -0,0 +1,7 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.accounts = void 0;
+exports.accounts = [
+    { id: 1, username: "admin", password: "admin", isModerator: true },
+];
+//# sourceMappingURL=accountSeed.
\ No newline at end of file
